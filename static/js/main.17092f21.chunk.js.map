{"version":3,"sources":["components/Header.js","components/Button.js","components/MenuBreakfast.js","components/MenuLunchAndDinner.js","redux/actions/client.js","redux/actions/actionTypes.js","components/NameClient.js","components/WaiterView.js","App.js","serviceWorker.js","redux/reducers/index.js","redux/reducers/client.js","redux/store/index.js","redux/store/initialState.js","index.js"],"names":["Header","react_default","a","createElement","className","this","props","header","Component","Button","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleClick","bind","assertThisInitialized","buttonOnclick","type","onClick","btnName","MenuBreakfast","state","menuBurger","breakfast","map","menu","i","components_Button","name","price","lib","fluid","xs","md","id","MenuLunchAndDinner","lunchAndDinner","clientName","distpatch","client","payload","NameClient","handleClient","e","preventDefault","turnClient","getName","value","_this2","onSubmit","onChange","ref","input","connect","objectSpread","dispatch","WaiterView","showBreakfast","showOthers","setState","components_NameClient","components_MenuBreakfast","components_MenuLunchAndDinner","App","components_Header","components_WaiterView","Boolean","window","location","hostname","match","combineReducers","arguments","length","undefined","action","createStore","reducer","composeWithDevTools","applyMiddleware","thunkMiddleware","ReactDOM","render","es","store","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.17092f21.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nclass Header extends Component {\n    render() {\n        return (\n\n            <div className=\"header\">\n                \n                    <h2 className= \"left\">BURGER QUEEN</h2>\n                    {this.props.header}\n                \n            </div>\n\n\n        );\n    }\n\n}\n\nexport default Header;","import React, { Component } from 'react';\n\n\nclass Button extends Component {\n    constructor(props) {\n        super(props);\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick() {\n        this.props.buttonOnclick();\n    }\n\n    render() {\n        return  ( \n          <button type=\"button\" onClick= {this.handleClick}>{this.props.btnName}</button>   \n        );\n    }\n}\n\nexport default Button;","import React, { Component } from 'react';\nimport Button from './Button';\nimport menuBurger from '../menuBurger.json';\nimport { Grid, Row, Col } from 'react-flexbox-grid';\n\n\nclass MenuBreakfast extends Component {\n    constructor() {\n        super();\n        this.state = { menuBurger }\n    }\n\n    render() {\n        const breakfast = this.state.menuBurger.breakfast.map((menu, i) => {\n            return (\n                <Button btnName={menu.name + \"\" + menu.price} />\n            )\n        })\n\n        return (\n            <Grid fluid>\n                <Row>\n                    <Col xs={6} md={3}>\n                    <div id=\"productBreakfast\">\n                        {breakfast}\n                    </div>\n                    </Col>\n                </Row>\n            </Grid>\n        );\n    }\n}\n\nexport default (MenuBreakfast);\n","import React, { Component } from 'react';\nimport Button from './Button';\nimport menuBurger from '../menuBurger.json';\nimport { Grid, Row, Col } from 'react-flexbox-grid';\n\nclass MenuLunchAndDinner extends Component {\n    constructor() {\n        super();\n        this.state = { menuBurger }\n    }\n\n    render() {\n        const lunchAndDinner = this.state.menuBurger.lunchAndDinner.map((menu, i) => {\n            return (\n                <Button btnName={menu.name + \"\" + menu.price} />\n            )\n        })\n\n        return (\n            <Grid fluid>\n                <Row>\n                    <Col xs={6} md={3}>\n                    <div id=\"productLunch\">\n                        {lunchAndDinner}\n                    </div>\n                    </Col>\n                </Row>\n            </Grid>\n        );\n    }\n}\n\nexport default MenuLunchAndDinner;\n","import { ADD_CLIENT } from './actionTypes';\n\nexport const clientName = distpatch => (client) => {\n    distpatch({\n        type: ADD_CLIENT,\n        payload: client,\n    })\n}\n","export const ADD_CLIENT=\"ADD_CLIENT\";","import React, { Component } from 'react';\nimport {connect} from 'react-redux'; //unir react y redux \nimport {clientName} from '../redux/actions/client'\n\nclass NameClient extends Component {\n    constructor(props) {\n        super(props);\n        this.handleClient = this.handleClient.bind(this);\n    }\n\n    handleClient(e) {\n        e.preventDefault();\n        this.props.turnClient(this.getName.value)\n    }\n\n    render() {\n        return (\n            <div className = \"inputname\">\n                <form onSubmit = {this.handleClient}>\n                <div className= \"form-group\">\n                <input type = \"text\" onChange = {this.props.onChange} className = \"form-control\" \n                       name = \"clientName\" \n                       ref= {(input) => this.getName = input} />\n               </div>\n                <input type = \"submit\" className = \"enter\" value = \"Ingresar\"/>\n                </form>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        ...state\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        turnClient: clientName(dispatch),\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    //recuperar estado\n    mapDispatchToProps\n    // enviar acciones\n)\n(NameClient);","import React, { Component } from 'react';\nimport Button from './Button';\nimport MenuBreakfast from './MenuBreakfast';\nimport MenuLunchAndDinner from './MenuLunchAndDinner';\nimport NameClient from './NameClient';\nimport { connect } from 'react-redux';\nimport { clientName } from '../redux/actions/client';\n\nclass WaiterView extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showBreakfast: false,\n            showOthers: false,\n        }\n\n        this.showBreakfast = this.showBreakfast.bind(this);\n        this.showOthers = this.showOthers.bind(this);\n    }\n\n    showBreakfast() {\n        this.setState({\n            ...this.state,\n            showBreakfast: true,\n            showOthers: false\n        })\n    }\n\n    showOthers() {\n        this.setState({\n            ...this.state,\n            showBreakfast: false,\n            showOthers: true\n        })\n    }\n\n    render() {\n\n        return (\n\n                        <div className=\"menu-container\">\n\n                            <NameClient />\n                            {this.props.client}\n                            <Button btnName=\"Desayuno\" id=\"btnDesayuno\" buttonOnclick={this.showBreakfast} />\n                            <Button btnName=\"Resto del día\" id=\"btnAlmuerzo\" buttonOnclick={this.showOthers} />\n\n                                {\n                                    this.state.showBreakfast &&\n                                    <MenuBreakfast />\n                                }\n                                {\n                                    this.state.showOthers &&\n                                    <MenuLunchAndDinner />\n                                }\n                            </div>\n            \n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        ...state\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        client: clientName(dispatch)\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(WaiterView);\n\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport Header from './components/Header'\nimport WaiterView from './components/WaiterView';\n\n\nclass App extends Component {\n\n  render() {\n\n    return (\n      <div>\n       <Header />\n       <WaiterView />  \n           \n      </div>\n        \n    );\n  }\n  \n}\n\nexport default App;\n\n\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {combineReducers} from 'redux';\nimport client from './client';\n\nexport default combineReducers({\n    client,\n});","import { ADD_CLIENT } from '../actions/actionTypes';\n\nexport default (\n    state = {\n        client: \"\"\n    },\n    action\n) => {\n    switch(action.type){\n        case ADD_CLIENT:\n        return {\n            ...state,\n            client: action.payload\n        }\n        default: return state;\n    }\n}\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunkMiddleware from 'redux-thunk';\nimport reducer from '../reducers';\nimport state from './initialState';\n\nexport default createStore(\n  reducer,\n  state,\n  composeWithDevTools(applyMiddleware(thunkMiddleware)),\n);\n","export default {\n  \n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './App.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>\n  , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}