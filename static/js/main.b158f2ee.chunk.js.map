{"version":3,"sources":["components/Header.js","components/Button.js","components/NameClient.js","components/FormMenu.js","components/ComponentMenu.js","App.js","components/ContenidoMenu.js","components/ProductBreakfast.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","lib","fluid","xs","md","lg","className","this","props","header","Component","Button","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleClick","bind","assertThisInitialized","buttonOnclick","type","onClick","btn","NameClient","state","value","handleChange","handleSubmit","event","setState","target","alert","preventDefault","onSubmit","placeholder","onChange","inputname","FormMenu","title","options","handleInput","e","_e$target","name","defineProperty","components_NameClient","components_Button","ComponentMenu","menu","handleAddOrder","order","concat","toConsumableArray","map","menus","index","option","key","App","components_Header","components_ComponentMenu","components_FormMenu","onAddOrder","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b158f2ee.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Grid, Row, Col } from 'react-flexbox-grid';\n\nclass Header extends Component {\n    render() {\n        return (\n\n            <Grid fluid>\n                <Row>\n                    <Col xs={12} md={12} lg={12}>\n                    <div className=\"header\">\n                        <h3>BURGER QUEEN</h3>\n                        {this.props.header}\n                    </div>\n                    </Col>\n                </Row>\n            </Grid >\n\n                    );\n    }\n\n}\n\nexport default Header;","import React, { Component } from 'react';\n\n\nclass Button extends Component {\n    constructor() {\n        super();\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick() {\n        this.props.buttonOnclick();\n    }\n\n    render() {\n        return  ( \n          <button type=\"button\" className=\"btn\" onClick= {this.handleClick}>{this.props.btn}</button>   \n        );\n    }\n}\n\nexport default Button;","import React, { Component } from 'react';\n\nclass NameClient extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {value: ''};\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n\n    handleSubmit(event) {\n        alert('Bienvenido a BurgerQueen: ' + this.state.value);\n        event.preventDefault();\n    }\n    render() {\n        return (\n            <div className = \"inputname\">\n                <form onSubmit = {this.handleSubmit}>\n                <label>\n                <input type =\"text\" placeholder= \"Â¿Tu nombre es?\" value = {this.state.value} onChange={this.handleChange}/>\n                </label>\n                <input type = \"submit\" className = \"enter\" value = \"Ingresar\"/>\n                </form>\n                {this.props.inputname}\n            </div>\n        );\n    }\n}\n\nexport default NameClient;","import React, { Component } from 'react';\nimport Button from './Button';\n\nimport { Grid, Row, Col } from 'react-flexbox-grid';\nimport NameClient from './NameClient';\n\nclass FormMenu extends Component {\n    constructor() {\n        super();\n        this.setState = {\n            title: 'Desayuno',\n            options: 'Cafe americano: $5.00'\n        };\n\n        this.handleInput = this.handleInput.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleInput(e) {\n       // console.log(\"cambiando\");\n        const { value, name } = e.target;\n        this.setState = { \n            [name]: value \n        }\n       \n    }\n\n    handleSubmit(e) {\n        e.preventDefault(); //evita refrescar el formulario//\n       \n    }\n\n    render() {\n        return (\n\n                <div className = \"container\">    \n                <div className= \"row\">\n                <div className=\"col-md-4\">\n                <div className=\"card mt-4\">           \n            <div className=\"card mt-4\">\n                <form className=\"card-body\" onSubmit= {this.handleSubmit}>\n                    <NameClient inputname =  {this.props.inputname} /> \n                        <select\n                            name=\"title\"\n                            className=\"formulario-pedido-desayuno\"\n                            onChange={this.handleInput} >\n                            <option>Desayuno</option>\n                            <option>Almuerzo y Cena</option>\n                        </select>\n                   \n                        <select\n                            name = \"options\"\n                            className=\"formulario-pedido-desayuno\"\n                            onChange={this.handleInput} >\n                            <option>Cafe americano: $5.00</option>\n                            <option>Cafe con leche: $7.00</option>\n                            <option>Sandwich de jamon y queso: $10.00</option>\n                            <option>Jugo natural: $7.00</option>\n                        </select>\n                </form>\n                <Button btn= \"Agregar al pedido\"/>\n            </div>\n            </div>\n            </div>\n            </div>\n            </div>\n\n        )\n    }\n}\n\nexport default FormMenu;\n","import React, { Component } from 'react';\nimport { menu } from '../menu.json';\n\n\nclass ComponentMenu extends Component {\n    constructor() {\n      super();\n      this.state = {\n        menu\n      };\n\n    this.handleAddOrder = this.handleAddOrder.bind(this);\n  \n    }\n\n    handleAddOrder(order) {\n       this.setState({\n           menu: [...this.state.menu, order]\n       })\n   }\n\n    render() {\n        const menu = this.state.menu;\n            return menu.map((menus, index) => (\n\n                <div className = \"container\">\n                <div className= \"row\">\n                <div className=\"col-md-4\">\n                <div className=\"card mt-4\">\n                <div className=\"card-header\">\n                <h4>{menus.title}</h4>\n                </div>\n                </div>\n\n                <div className=\"card-body\">\n                <ul>\n                {menus.options.map((option, index) => {\n                            return <li key={`option_${index}`}>{option}</li>\n                })}                      \n                </ul>\n                </div>\n                \n                </div>\n                </div>\n                </div>\n            ));\n            \n    }   \n}\n\n\nexport default ComponentMenu;","import React, { Component } from 'react';\nimport './App.css';\n\n//import ComponentMenu from './components/ComponentMenu';\nimport Header from './components/Header'\nimport FormMenu from './components/FormMenu';\nimport ComponentMenu from './components/ComponentMenu'\nimport ContenidoMenu from './components/ContenidoMenu';\nimport ProductBreakfast from './components/ProductBreakfast';\n\nclass App extends Component {\n\n  render() {\n\n    return (\n      <div>\n\n       <Header />\n       <ComponentMenu />\n   \n        <FormMenu onAddOrder = \"pedido\" />    \n       \n      </div>\n        \n    );\n  }\n\n  \n}\n\nexport default App;\n\n\n\n\n\n","import React, { Component } from 'react';\nimport { Grid, Row, Col } from 'react-flexbox-grid';\nimport Button from './Button';\n\n\n\nclass ContenidoMenu extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {menuBurger: true};\n\n    this.handleBreakfast = this.handleBreakfast.bind(this);\n  }\n\n  handleBreakfast() {\n    this.setState(state => ({\n      menuBurger: !state.menuBurger\n    }));\n  }\n\n  render() {\n    return (\n     \n      <div className= \"container_menu\">\n      <div className=\"row\">\n      <div className=\"col-sm\" id= \"pedido\">\n      <Button btn= \"Desayuno\" buttonOnClick={e => this.menuBurger('Desayuno', e)}/>\n      <Button btn= \"Resto del dÃ­a\" />\n      \n      </div>\n      </div>\n      </div> \n    );\n  }\n}\n\nexport default ContenidoMenu;","import React, { Component } from 'react';\nimport Button from './Button';\n\nclass ProductBreakfast extends Component {\n    constructor(){\n        super();\n      \n    }\n\n    render() {\n        return (\n            <div className=\"container_breakfast\">\n                <div className=\"row\">\n                    <div className=\"col-sm\" id=\"breakfast\">\n                    <Button btn= \"CafÃ© Americano\" id=\"btn_coffeAm\" />\n                    <Button btn= \"CafÃ© con Leche\"/>\n                    <Button btn= \"SÃ¡ndwich de JamÃ³n y Queso\"/>\n                    <Button btn= \"Jugo Natural\"/>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ProductBreakfast;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}